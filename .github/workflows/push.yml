name: Build, Deploy, and Push

on:
  push:
    branches:
      - main

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 20

      - name: Install Yarn
        run: npm install -g yarn

      - name: Install Dependencies
        run: yarn install
        working-directory: src/main/reactfront

      - name: Build React App
        run: yarn build
        working-directory: src/main/reactfront

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build Spring Boot Application
        run: |
          chmod +x ./gradlew

      - name: Build WAR
        uses: gradle/gradle-build-action@v2
        with:
          arguments: build
          cache-read-only: ${{ github.ref != 'refs/heads/main' && github.ref != 'refs/heads/develop' }}

      - name: Archive Build Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: build-artifacts
          path: ./build/libs/ROOT.war

      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      - name: Login to NCP Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ secrets.NCP_CONTAINER_REGISTRY }}
          username: ${{ secrets.NCP_ACCESS_KEY }}
          password: ${{ secrets.NCP_SECRET_KEY }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.NCP_CONTAINER_REGISTRY }}/tag-name:latest
          cache-from: type=registry,ref=${{ secrets.NCP_CONTAINER_REGISTRY }}/prv-frontend:latest

  pull_from_registry:
    name: Connect server ssh and pull from container registry
    needs: build_and_deploy
    runs-on: ubuntu-latest
    steps:
      - name: connect ssh
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DEV_HOST }}
          username: ${{ secrets.DEV_USERNAME }}
          password: ${{ secrets.DEV_PASSWORD }}
          port: ${{ secrets.DEV_PORT }}
          script: |
            docker pull ${{ secrets.NCP_CONTAINER_REGISTRY }}/tag-name
            docker stop $(docker ps -a -q)
            docker rm $(docker ps -a -q)
            docker run -d -p 8000:8080 ${{ secrets.NCP_CONTAINER_REGISTRY }}/tag-name
            docker image prune -f
